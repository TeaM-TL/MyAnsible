---
- name: 1.1 Write passwords into files
  copy:
    content: "{{ item.pwd }}"
    dest: "{{ item.file }}"
    owner: "{{ opendj_user }}"
    group: "{{ opendj_group }}"
    mode: '0600'
  become: true
  with_items:
  - { file: "{{ opendj_replica_admin_password_file }}", pwd: "{{ opendj_replica_admin_password }}" }
  - { file: "{{ opendj_replica_dm_password_file }}", pwd: "{{ opendj_replica_dm_password }}" }

- name: 1.2 Enable replication
  command: su - {{ opendj_user }} -c "{{ opendj_bin}}/dsreplication enable
        --host1 {{ opendj_replica_hostname }}
        --port1 {{ opendj_port_admin }}
        --bindDN1 'cn=Directory Manager'
        --bindPasswordFile1 {{ opendj_replica_dm_password_file }}
        --replicationPort1 {{ opendj_port_replica }}
        --secureReplication1
        --host2 {{ ansible_fqdn }}
        --port2 {{ opendj_port_admin }}
        --bindDN2 'cn=Directory Manager'
        --bindPasswordFile2 {{ opendj_dm_password_file }}
        --replicationPort2 {{ opendj_port_replica }}
        --secureReplication2
        --baseDN {{ opendj_context }}
        --adminUID admin
        --adminPasswordFile {{ opendj_replica_admin_password_file }}
        --trustAll
        --noPropertiesFile
        --no-prompt"
  become: true
  when: opendj_replica == "on"

- name: 1.3 Initialize replication
  command: su - {{ opendj_user }} -c "{{ opendj_bin }}/dsreplication initialize
        --hostSource {{ opendj_replica_hostname }}
        --portSource 4444
        --hostDestination  {{ ansible_fqdn }}
        --portDestination 4444
        --baseDN {{ opendj_context }}
        --adminUID admin
        --adminPasswordFile {{ opendj_replica_admin_password_file }}
        --trustAll
        --no-prompt"
  become: true
  when: opendj_replica == "on"

